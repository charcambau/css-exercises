* {
  box-sizing: border-box;
}

body {
  margin: 0;
  min-height: 100vh;

  /* center */
  display: flex;
  justify-content: center;
  align-items: center;
}

:root {
  /* define the custom property */
  /* in a global scope */
  --box-size: 100px;
}

.card {
  position: relative;
  font-size: 4em;
  border: 5px solid blue;

  /* This is the way to make both elements visible at the same time */
  transform-style: preserve-3D;
}

.side {
  /* overwrite the custom property value only for the box element. Now it's scoped to that element
--box-size: 150px;*/

  width: var(--box-size);
  height: var(--box-size);
  text-align: center;
  line-height: var(--box-size); 
}

.side-front{
  /* You can't see the element from behind */
  backface-visibility: hidden;
}

.side-back {
  color: red;

  transform: rotateY(180deg);

  position: absolute;
  top: 0;
  left: 0;
  /* You can't see the element from behind */
  backface-visibility: hidden;
}

/* ----TRANSFORMS---- */

body {
  perspective: 250px;
  perspective-origin: center center;
}

.transform {
  transition: transform 1500ms ease-in-out;
}

/* When I hover the body, this will change the transform. Helps to modify an element when hovering over its parent */
body:hover .transform {
  transition: transform 1400ms;

  transform: rotateY(-180deg);
}
